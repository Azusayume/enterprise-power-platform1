<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.epp.mapper.BranchSetMapper">
  <resultMap id="BaseResultMap" type="com.epp.pojo.BranchSet">
    <id column="branch_id" jdbcType="INTEGER" property="branchId" />
    <result column="enterprise_id" jdbcType="INTEGER" property="enterpriseId" />
    <result column="first_branch_set" jdbcType="INTEGER" property="firstBranchSet" />
    <result column="second_branch_set" jdbcType="INTEGER" property="secondBranchSet" />
    <result column="third_branch_set" jdbcType="INTEGER" property="thirdBranchSet" />
    <result column="forth_branch_set" jdbcType="INTEGER" property="forthBranchSet" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    branch_id, enterprise_id, first_branch_set, second_branch_set, third_branch_set, 
    forth_branch_set
  </sql>
  <select id="selectByExample" parameterType="com.epp.pojo.BranchSetExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from branch_set
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from branch_set
    where branch_id = #{branchId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from branch_set
    where branch_id = #{branchId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.epp.pojo.BranchSetExample">
    delete from branch_set
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.epp.pojo.BranchSet">
    <selectKey keyProperty="branchId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into branch_set (enterprise_id, first_branch_set, second_branch_set, 
      third_branch_set, forth_branch_set)
    values (#{enterpriseId,jdbcType=INTEGER}, #{firstBranchSet,jdbcType=INTEGER}, #{secondBranchSet,jdbcType=INTEGER}, 
      #{thirdBranchSet,jdbcType=INTEGER}, #{forthBranchSet,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.epp.pojo.BranchSet">
    <selectKey keyProperty="branchId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into branch_set
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="enterpriseId != null">
        enterprise_id,
      </if>
      <if test="firstBranchSet != null">
        first_branch_set,
      </if>
      <if test="secondBranchSet != null">
        second_branch_set,
      </if>
      <if test="thirdBranchSet != null">
        third_branch_set,
      </if>
      <if test="forthBranchSet != null">
        forth_branch_set,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="enterpriseId != null">
        #{enterpriseId,jdbcType=INTEGER},
      </if>
      <if test="firstBranchSet != null">
        #{firstBranchSet,jdbcType=INTEGER},
      </if>
      <if test="secondBranchSet != null">
        #{secondBranchSet,jdbcType=INTEGER},
      </if>
      <if test="thirdBranchSet != null">
        #{thirdBranchSet,jdbcType=INTEGER},
      </if>
      <if test="forthBranchSet != null">
        #{forthBranchSet,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.epp.pojo.BranchSetExample" resultType="java.lang.Long">
    select count(*) from branch_set
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update branch_set
    <set>
      <if test="record.branchId != null">
        branch_id = #{record.branchId,jdbcType=INTEGER},
      </if>
      <if test="record.enterpriseId != null">
        enterprise_id = #{record.enterpriseId,jdbcType=INTEGER},
      </if>
      <if test="record.firstBranchSet != null">
        first_branch_set = #{record.firstBranchSet,jdbcType=INTEGER},
      </if>
      <if test="record.secondBranchSet != null">
        second_branch_set = #{record.secondBranchSet,jdbcType=INTEGER},
      </if>
      <if test="record.thirdBranchSet != null">
        third_branch_set = #{record.thirdBranchSet,jdbcType=INTEGER},
      </if>
      <if test="record.forthBranchSet != null">
        forth_branch_set = #{record.forthBranchSet,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update branch_set
    set branch_id = #{record.branchId,jdbcType=INTEGER},
      enterprise_id = #{record.enterpriseId,jdbcType=INTEGER},
      first_branch_set = #{record.firstBranchSet,jdbcType=INTEGER},
      second_branch_set = #{record.secondBranchSet,jdbcType=INTEGER},
      third_branch_set = #{record.thirdBranchSet,jdbcType=INTEGER},
      forth_branch_set = #{record.forthBranchSet,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.epp.pojo.BranchSet">
    update branch_set
    <set>
      <if test="enterpriseId != null">
        enterprise_id = #{enterpriseId,jdbcType=INTEGER},
      </if>
      <if test="firstBranchSet != null">
        first_branch_set = #{firstBranchSet,jdbcType=INTEGER},
      </if>
      <if test="secondBranchSet != null">
        second_branch_set = #{secondBranchSet,jdbcType=INTEGER},
      </if>
      <if test="thirdBranchSet != null">
        third_branch_set = #{thirdBranchSet,jdbcType=INTEGER},
      </if>
      <if test="forthBranchSet != null">
        forth_branch_set = #{forthBranchSet,jdbcType=INTEGER},
      </if>
    </set>
    where branch_id = #{branchId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.epp.pojo.BranchSet">
    update branch_set
    set enterprise_id = #{enterpriseId,jdbcType=INTEGER},
      first_branch_set = #{firstBranchSet,jdbcType=INTEGER},
      second_branch_set = #{secondBranchSet,jdbcType=INTEGER},
      third_branch_set = #{thirdBranchSet,jdbcType=INTEGER},
      forth_branch_set = #{forthBranchSet,jdbcType=INTEGER}
    where branch_id = #{branchId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.epp.pojo.BranchSet">
    <id column="branch_id" jdbcType="INTEGER" property="branchId" />
    <result column="enterprise_id" jdbcType="INTEGER" property="enterpriseId" />
    <result column="first_branch_set" jdbcType="INTEGER" property="firstBranchSet" />
    <result column="second_branch_set" jdbcType="INTEGER" property="secondBranchSet" />
    <result column="third_branch_set" jdbcType="INTEGER" property="thirdBranchSet" />
    <result column="forth_branch_set" jdbcType="INTEGER" property="forthBranchSet" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    branch_id, enterprise_id, first_branch_set, second_branch_set, third_branch_set, 
    forth_branch_set
  </sql>
  <select id="selectByExample" parameterType="com.epp.pojo.BranchSetExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from branch_set
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from branch_set
    where branch_id = #{branchId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from branch_set
    where branch_id = #{branchId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.epp.pojo.BranchSetExample">
    delete from branch_set
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.epp.pojo.BranchSet">
    <selectKey keyProperty="branchId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into branch_set (enterprise_id, first_branch_set, second_branch_set, 
      third_branch_set, forth_branch_set)
    values (#{enterpriseId,jdbcType=INTEGER}, #{firstBranchSet,jdbcType=INTEGER}, #{secondBranchSet,jdbcType=INTEGER}, 
      #{thirdBranchSet,jdbcType=INTEGER}, #{forthBranchSet,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.epp.pojo.BranchSet">
    <selectKey keyProperty="branchId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into branch_set
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="enterpriseId != null">
        enterprise_id,
      </if>
      <if test="firstBranchSet != null">
        first_branch_set,
      </if>
      <if test="secondBranchSet != null">
        second_branch_set,
      </if>
      <if test="thirdBranchSet != null">
        third_branch_set,
      </if>
      <if test="forthBranchSet != null">
        forth_branch_set,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="enterpriseId != null">
        #{enterpriseId,jdbcType=INTEGER},
      </if>
      <if test="firstBranchSet != null">
        #{firstBranchSet,jdbcType=INTEGER},
      </if>
      <if test="secondBranchSet != null">
        #{secondBranchSet,jdbcType=INTEGER},
      </if>
      <if test="thirdBranchSet != null">
        #{thirdBranchSet,jdbcType=INTEGER},
      </if>
      <if test="forthBranchSet != null">
        #{forthBranchSet,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.epp.pojo.BranchSetExample" resultType="java.lang.Long">
    select count(*) from branch_set
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update branch_set
    <set>
      <if test="record.branchId != null">
        branch_id = #{record.branchId,jdbcType=INTEGER},
      </if>
      <if test="record.enterpriseId != null">
        enterprise_id = #{record.enterpriseId,jdbcType=INTEGER},
      </if>
      <if test="record.firstBranchSet != null">
        first_branch_set = #{record.firstBranchSet,jdbcType=INTEGER},
      </if>
      <if test="record.secondBranchSet != null">
        second_branch_set = #{record.secondBranchSet,jdbcType=INTEGER},
      </if>
      <if test="record.thirdBranchSet != null">
        third_branch_set = #{record.thirdBranchSet,jdbcType=INTEGER},
      </if>
      <if test="record.forthBranchSet != null">
        forth_branch_set = #{record.forthBranchSet,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update branch_set
    set branch_id = #{record.branchId,jdbcType=INTEGER},
      enterprise_id = #{record.enterpriseId,jdbcType=INTEGER},
      first_branch_set = #{record.firstBranchSet,jdbcType=INTEGER},
      second_branch_set = #{record.secondBranchSet,jdbcType=INTEGER},
      third_branch_set = #{record.thirdBranchSet,jdbcType=INTEGER},
      forth_branch_set = #{record.forthBranchSet,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.epp.pojo.BranchSet">
    update branch_set
    <set>
      <if test="enterpriseId != null">
        enterprise_id = #{enterpriseId,jdbcType=INTEGER},
      </if>
      <if test="firstBranchSet != null">
        first_branch_set = #{firstBranchSet,jdbcType=INTEGER},
      </if>
      <if test="secondBranchSet != null">
        second_branch_set = #{secondBranchSet,jdbcType=INTEGER},
      </if>
      <if test="thirdBranchSet != null">
        third_branch_set = #{thirdBranchSet,jdbcType=INTEGER},
      </if>
      <if test="forthBranchSet != null">
        forth_branch_set = #{forthBranchSet,jdbcType=INTEGER},
      </if>
    </set>
    where branch_id = #{branchId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.epp.pojo.BranchSet">
    update branch_set
    set enterprise_id = #{enterpriseId,jdbcType=INTEGER},
      first_branch_set = #{firstBranchSet,jdbcType=INTEGER},
      second_branch_set = #{secondBranchSet,jdbcType=INTEGER},
      third_branch_set = #{thirdBranchSet,jdbcType=INTEGER},
      forth_branch_set = #{forthBranchSet,jdbcType=INTEGER}
    where branch_id = #{branchId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.epp.pojo.BranchSet">
    <id column="branch_id" jdbcType="INTEGER" property="branchId" />
    <result column="enterprise_id" jdbcType="INTEGER" property="enterpriseId" />
    <result column="first_branch_set" jdbcType="INTEGER" property="firstBranchSet" />
    <result column="second_branch_set" jdbcType="INTEGER" property="secondBranchSet" />
    <result column="third_branch_set" jdbcType="INTEGER" property="thirdBranchSet" />
    <result column="forth_branch_set" jdbcType="INTEGER" property="forthBranchSet" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    branch_id, enterprise_id, first_branch_set, second_branch_set, third_branch_set, 
    forth_branch_set
  </sql>
  <select id="selectByExample" parameterType="com.epp.pojo.BranchSetExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from branch_set
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from branch_set
    where branch_id = #{branchId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from branch_set
    where branch_id = #{branchId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.epp.pojo.BranchSetExample">
    delete from branch_set
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.epp.pojo.BranchSet">
    <selectKey keyProperty="branchId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into branch_set (enterprise_id, first_branch_set, second_branch_set, 
      third_branch_set, forth_branch_set)
    values (#{enterpriseId,jdbcType=INTEGER}, #{firstBranchSet,jdbcType=INTEGER}, #{secondBranchSet,jdbcType=INTEGER}, 
      #{thirdBranchSet,jdbcType=INTEGER}, #{forthBranchSet,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.epp.pojo.BranchSet">
    <selectKey keyProperty="branchId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into branch_set
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="enterpriseId != null">
        enterprise_id,
      </if>
      <if test="firstBranchSet != null">
        first_branch_set,
      </if>
      <if test="secondBranchSet != null">
        second_branch_set,
      </if>
      <if test="thirdBranchSet != null">
        third_branch_set,
      </if>
      <if test="forthBranchSet != null">
        forth_branch_set,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="enterpriseId != null">
        #{enterpriseId,jdbcType=INTEGER},
      </if>
      <if test="firstBranchSet != null">
        #{firstBranchSet,jdbcType=INTEGER},
      </if>
      <if test="secondBranchSet != null">
        #{secondBranchSet,jdbcType=INTEGER},
      </if>
      <if test="thirdBranchSet != null">
        #{thirdBranchSet,jdbcType=INTEGER},
      </if>
      <if test="forthBranchSet != null">
        #{forthBranchSet,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.epp.pojo.BranchSetExample" resultType="java.lang.Long">
    select count(*) from branch_set
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update branch_set
    <set>
      <if test="record.branchId != null">
        branch_id = #{record.branchId,jdbcType=INTEGER},
      </if>
      <if test="record.enterpriseId != null">
        enterprise_id = #{record.enterpriseId,jdbcType=INTEGER},
      </if>
      <if test="record.firstBranchSet != null">
        first_branch_set = #{record.firstBranchSet,jdbcType=INTEGER},
      </if>
      <if test="record.secondBranchSet != null">
        second_branch_set = #{record.secondBranchSet,jdbcType=INTEGER},
      </if>
      <if test="record.thirdBranchSet != null">
        third_branch_set = #{record.thirdBranchSet,jdbcType=INTEGER},
      </if>
      <if test="record.forthBranchSet != null">
        forth_branch_set = #{record.forthBranchSet,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update branch_set
    set branch_id = #{record.branchId,jdbcType=INTEGER},
      enterprise_id = #{record.enterpriseId,jdbcType=INTEGER},
      first_branch_set = #{record.firstBranchSet,jdbcType=INTEGER},
      second_branch_set = #{record.secondBranchSet,jdbcType=INTEGER},
      third_branch_set = #{record.thirdBranchSet,jdbcType=INTEGER},
      forth_branch_set = #{record.forthBranchSet,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.epp.pojo.BranchSet">
    update branch_set
    <set>
      <if test="enterpriseId != null">
        enterprise_id = #{enterpriseId,jdbcType=INTEGER},
      </if>
      <if test="firstBranchSet != null">
        first_branch_set = #{firstBranchSet,jdbcType=INTEGER},
      </if>
      <if test="secondBranchSet != null">
        second_branch_set = #{secondBranchSet,jdbcType=INTEGER},
      </if>
      <if test="thirdBranchSet != null">
        third_branch_set = #{thirdBranchSet,jdbcType=INTEGER},
      </if>
      <if test="forthBranchSet != null">
        forth_branch_set = #{forthBranchSet,jdbcType=INTEGER},
      </if>
    </set>
    where branch_id = #{branchId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.epp.pojo.BranchSet">
    update branch_set
    set enterprise_id = #{enterpriseId,jdbcType=INTEGER},
      first_branch_set = #{firstBranchSet,jdbcType=INTEGER},
      second_branch_set = #{secondBranchSet,jdbcType=INTEGER},
      third_branch_set = #{thirdBranchSet,jdbcType=INTEGER},
      forth_branch_set = #{forthBranchSet,jdbcType=INTEGER}
    where branch_id = #{branchId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.epp.pojo.BranchSet">
    <id column="branch_id" jdbcType="INTEGER" property="branchId" />
    <result column="enterprise_id" jdbcType="INTEGER" property="enterpriseId" />
    <result column="first_branch_set" jdbcType="INTEGER" property="firstBranchSet" />
    <result column="second_branch_set" jdbcType="INTEGER" property="secondBranchSet" />
    <result column="third_branch_set" jdbcType="INTEGER" property="thirdBranchSet" />
    <result column="forth_branch_set" jdbcType="INTEGER" property="forthBranchSet" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    branch_id, enterprise_id, first_branch_set, second_branch_set, third_branch_set, 
    forth_branch_set
  </sql>
  <select id="selectByExample" parameterType="com.epp.pojo.BranchSetExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from branch_set
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from branch_set
    where branch_id = #{branchId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from branch_set
    where branch_id = #{branchId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.epp.pojo.BranchSetExample">
    delete from branch_set
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.epp.pojo.BranchSet">
    <selectKey keyProperty="branchId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into branch_set (enterprise_id, first_branch_set, second_branch_set, 
      third_branch_set, forth_branch_set)
    values (#{enterpriseId,jdbcType=INTEGER}, #{firstBranchSet,jdbcType=INTEGER}, #{secondBranchSet,jdbcType=INTEGER}, 
      #{thirdBranchSet,jdbcType=INTEGER}, #{forthBranchSet,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.epp.pojo.BranchSet">
    <selectKey keyProperty="branchId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into branch_set
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="enterpriseId != null">
        enterprise_id,
      </if>
      <if test="firstBranchSet != null">
        first_branch_set,
      </if>
      <if test="secondBranchSet != null">
        second_branch_set,
      </if>
      <if test="thirdBranchSet != null">
        third_branch_set,
      </if>
      <if test="forthBranchSet != null">
        forth_branch_set,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="enterpriseId != null">
        #{enterpriseId,jdbcType=INTEGER},
      </if>
      <if test="firstBranchSet != null">
        #{firstBranchSet,jdbcType=INTEGER},
      </if>
      <if test="secondBranchSet != null">
        #{secondBranchSet,jdbcType=INTEGER},
      </if>
      <if test="thirdBranchSet != null">
        #{thirdBranchSet,jdbcType=INTEGER},
      </if>
      <if test="forthBranchSet != null">
        #{forthBranchSet,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.epp.pojo.BranchSetExample" resultType="java.lang.Long">
    select count(*) from branch_set
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update branch_set
    <set>
      <if test="record.branchId != null">
        branch_id = #{record.branchId,jdbcType=INTEGER},
      </if>
      <if test="record.enterpriseId != null">
        enterprise_id = #{record.enterpriseId,jdbcType=INTEGER},
      </if>
      <if test="record.firstBranchSet != null">
        first_branch_set = #{record.firstBranchSet,jdbcType=INTEGER},
      </if>
      <if test="record.secondBranchSet != null">
        second_branch_set = #{record.secondBranchSet,jdbcType=INTEGER},
      </if>
      <if test="record.thirdBranchSet != null">
        third_branch_set = #{record.thirdBranchSet,jdbcType=INTEGER},
      </if>
      <if test="record.forthBranchSet != null">
        forth_branch_set = #{record.forthBranchSet,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update branch_set
    set branch_id = #{record.branchId,jdbcType=INTEGER},
      enterprise_id = #{record.enterpriseId,jdbcType=INTEGER},
      first_branch_set = #{record.firstBranchSet,jdbcType=INTEGER},
      second_branch_set = #{record.secondBranchSet,jdbcType=INTEGER},
      third_branch_set = #{record.thirdBranchSet,jdbcType=INTEGER},
      forth_branch_set = #{record.forthBranchSet,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.epp.pojo.BranchSet">
    update branch_set
    <set>
      <if test="enterpriseId != null">
        enterprise_id = #{enterpriseId,jdbcType=INTEGER},
      </if>
      <if test="firstBranchSet != null">
        first_branch_set = #{firstBranchSet,jdbcType=INTEGER},
      </if>
      <if test="secondBranchSet != null">
        second_branch_set = #{secondBranchSet,jdbcType=INTEGER},
      </if>
      <if test="thirdBranchSet != null">
        third_branch_set = #{thirdBranchSet,jdbcType=INTEGER},
      </if>
      <if test="forthBranchSet != null">
        forth_branch_set = #{forthBranchSet,jdbcType=INTEGER},
      </if>
    </set>
    where branch_id = #{branchId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.epp.pojo.BranchSet">
    update branch_set
    set enterprise_id = #{enterpriseId,jdbcType=INTEGER},
      first_branch_set = #{firstBranchSet,jdbcType=INTEGER},
      second_branch_set = #{secondBranchSet,jdbcType=INTEGER},
      third_branch_set = #{thirdBranchSet,jdbcType=INTEGER},
      forth_branch_set = #{forthBranchSet,jdbcType=INTEGER}
    where branch_id = #{branchId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.epp.pojo.BranchSet">
    <id column="branch_id" jdbcType="INTEGER" property="branchId" />
    <result column="enterprise_id" jdbcType="INTEGER" property="enterpriseId" />
    <result column="first_branch_set" jdbcType="INTEGER" property="firstBranchSet" />
    <result column="second_branch_set" jdbcType="INTEGER" property="secondBranchSet" />
    <result column="third_branch_set" jdbcType="INTEGER" property="thirdBranchSet" />
    <result column="forth_branch_set" jdbcType="INTEGER" property="forthBranchSet" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    branch_id, enterprise_id, first_branch_set, second_branch_set, third_branch_set, 
    forth_branch_set
  </sql>
  <select id="selectByExample" parameterType="com.epp.pojo.BranchSetExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from branch_set
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from branch_set
    where branch_id = #{branchId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from branch_set
    where branch_id = #{branchId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.epp.pojo.BranchSetExample">
    delete from branch_set
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.epp.pojo.BranchSet">
    <selectKey keyProperty="branchId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into branch_set (enterprise_id, first_branch_set, second_branch_set, 
      third_branch_set, forth_branch_set)
    values (#{enterpriseId,jdbcType=INTEGER}, #{firstBranchSet,jdbcType=INTEGER}, #{secondBranchSet,jdbcType=INTEGER}, 
      #{thirdBranchSet,jdbcType=INTEGER}, #{forthBranchSet,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.epp.pojo.BranchSet">
    <selectKey keyProperty="branchId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into branch_set
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="enterpriseId != null">
        enterprise_id,
      </if>
      <if test="firstBranchSet != null">
        first_branch_set,
      </if>
      <if test="secondBranchSet != null">
        second_branch_set,
      </if>
      <if test="thirdBranchSet != null">
        third_branch_set,
      </if>
      <if test="forthBranchSet != null">
        forth_branch_set,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="enterpriseId != null">
        #{enterpriseId,jdbcType=INTEGER},
      </if>
      <if test="firstBranchSet != null">
        #{firstBranchSet,jdbcType=INTEGER},
      </if>
      <if test="secondBranchSet != null">
        #{secondBranchSet,jdbcType=INTEGER},
      </if>
      <if test="thirdBranchSet != null">
        #{thirdBranchSet,jdbcType=INTEGER},
      </if>
      <if test="forthBranchSet != null">
        #{forthBranchSet,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.epp.pojo.BranchSetExample" resultType="java.lang.Long">
    select count(*) from branch_set
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update branch_set
    <set>
      <if test="record.branchId != null">
        branch_id = #{record.branchId,jdbcType=INTEGER},
      </if>
      <if test="record.enterpriseId != null">
        enterprise_id = #{record.enterpriseId,jdbcType=INTEGER},
      </if>
      <if test="record.firstBranchSet != null">
        first_branch_set = #{record.firstBranchSet,jdbcType=INTEGER},
      </if>
      <if test="record.secondBranchSet != null">
        second_branch_set = #{record.secondBranchSet,jdbcType=INTEGER},
      </if>
      <if test="record.thirdBranchSet != null">
        third_branch_set = #{record.thirdBranchSet,jdbcType=INTEGER},
      </if>
      <if test="record.forthBranchSet != null">
        forth_branch_set = #{record.forthBranchSet,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update branch_set
    set branch_id = #{record.branchId,jdbcType=INTEGER},
      enterprise_id = #{record.enterpriseId,jdbcType=INTEGER},
      first_branch_set = #{record.firstBranchSet,jdbcType=INTEGER},
      second_branch_set = #{record.secondBranchSet,jdbcType=INTEGER},
      third_branch_set = #{record.thirdBranchSet,jdbcType=INTEGER},
      forth_branch_set = #{record.forthBranchSet,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.epp.pojo.BranchSet">
    update branch_set
    <set>
      <if test="enterpriseId != null">
        enterprise_id = #{enterpriseId,jdbcType=INTEGER},
      </if>
      <if test="firstBranchSet != null">
        first_branch_set = #{firstBranchSet,jdbcType=INTEGER},
      </if>
      <if test="secondBranchSet != null">
        second_branch_set = #{secondBranchSet,jdbcType=INTEGER},
      </if>
      <if test="thirdBranchSet != null">
        third_branch_set = #{thirdBranchSet,jdbcType=INTEGER},
      </if>
      <if test="forthBranchSet != null">
        forth_branch_set = #{forthBranchSet,jdbcType=INTEGER},
      </if>
    </set>
    where branch_id = #{branchId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.epp.pojo.BranchSet">
    update branch_set
    set enterprise_id = #{enterpriseId,jdbcType=INTEGER},
      first_branch_set = #{firstBranchSet,jdbcType=INTEGER},
      second_branch_set = #{secondBranchSet,jdbcType=INTEGER},
      third_branch_set = #{thirdBranchSet,jdbcType=INTEGER},
      forth_branch_set = #{forthBranchSet,jdbcType=INTEGER}
    where branch_id = #{branchId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.epp.pojo.BranchSet">
    <id column="branch_id" jdbcType="INTEGER" property="branchId" />
    <result column="enterprise_id" jdbcType="INTEGER" property="enterpriseId" />
    <result column="first_branch_set" jdbcType="INTEGER" property="firstBranchSet" />
    <result column="second_branch_set" jdbcType="INTEGER" property="secondBranchSet" />
    <result column="third_branch_set" jdbcType="INTEGER" property="thirdBranchSet" />
    <result column="forth_branch_set" jdbcType="INTEGER" property="forthBranchSet" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    branch_id, enterprise_id, first_branch_set, second_branch_set, third_branch_set, 
    forth_branch_set
  </sql>
  <select id="selectByExample" parameterType="com.epp.pojo.BranchSetExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from branch_set
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from branch_set
    where branch_id = #{branchId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from branch_set
    where branch_id = #{branchId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.epp.pojo.BranchSetExample">
    delete from branch_set
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.epp.pojo.BranchSet">
    <selectKey keyProperty="branchId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into branch_set (enterprise_id, first_branch_set, second_branch_set, 
      third_branch_set, forth_branch_set)
    values (#{enterpriseId,jdbcType=INTEGER}, #{firstBranchSet,jdbcType=INTEGER}, #{secondBranchSet,jdbcType=INTEGER}, 
      #{thirdBranchSet,jdbcType=INTEGER}, #{forthBranchSet,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.epp.pojo.BranchSet">
    <selectKey keyProperty="branchId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into branch_set
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="enterpriseId != null">
        enterprise_id,
      </if>
      <if test="firstBranchSet != null">
        first_branch_set,
      </if>
      <if test="secondBranchSet != null">
        second_branch_set,
      </if>
      <if test="thirdBranchSet != null">
        third_branch_set,
      </if>
      <if test="forthBranchSet != null">
        forth_branch_set,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="enterpriseId != null">
        #{enterpriseId,jdbcType=INTEGER},
      </if>
      <if test="firstBranchSet != null">
        #{firstBranchSet,jdbcType=INTEGER},
      </if>
      <if test="secondBranchSet != null">
        #{secondBranchSet,jdbcType=INTEGER},
      </if>
      <if test="thirdBranchSet != null">
        #{thirdBranchSet,jdbcType=INTEGER},
      </if>
      <if test="forthBranchSet != null">
        #{forthBranchSet,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.epp.pojo.BranchSetExample" resultType="java.lang.Long">
    select count(*) from branch_set
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update branch_set
    <set>
      <if test="record.branchId != null">
        branch_id = #{record.branchId,jdbcType=INTEGER},
      </if>
      <if test="record.enterpriseId != null">
        enterprise_id = #{record.enterpriseId,jdbcType=INTEGER},
      </if>
      <if test="record.firstBranchSet != null">
        first_branch_set = #{record.firstBranchSet,jdbcType=INTEGER},
      </if>
      <if test="record.secondBranchSet != null">
        second_branch_set = #{record.secondBranchSet,jdbcType=INTEGER},
      </if>
      <if test="record.thirdBranchSet != null">
        third_branch_set = #{record.thirdBranchSet,jdbcType=INTEGER},
      </if>
      <if test="record.forthBranchSet != null">
        forth_branch_set = #{record.forthBranchSet,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update branch_set
    set branch_id = #{record.branchId,jdbcType=INTEGER},
      enterprise_id = #{record.enterpriseId,jdbcType=INTEGER},
      first_branch_set = #{record.firstBranchSet,jdbcType=INTEGER},
      second_branch_set = #{record.secondBranchSet,jdbcType=INTEGER},
      third_branch_set = #{record.thirdBranchSet,jdbcType=INTEGER},
      forth_branch_set = #{record.forthBranchSet,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.epp.pojo.BranchSet">
    update branch_set
    <set>
      <if test="enterpriseId != null">
        enterprise_id = #{enterpriseId,jdbcType=INTEGER},
      </if>
      <if test="firstBranchSet != null">
        first_branch_set = #{firstBranchSet,jdbcType=INTEGER},
      </if>
      <if test="secondBranchSet != null">
        second_branch_set = #{secondBranchSet,jdbcType=INTEGER},
      </if>
      <if test="thirdBranchSet != null">
        third_branch_set = #{thirdBranchSet,jdbcType=INTEGER},
      </if>
      <if test="forthBranchSet != null">
        forth_branch_set = #{forthBranchSet,jdbcType=INTEGER},
      </if>
    </set>
    where branch_id = #{branchId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.epp.pojo.BranchSet">
    update branch_set
    set enterprise_id = #{enterpriseId,jdbcType=INTEGER},
      first_branch_set = #{firstBranchSet,jdbcType=INTEGER},
      second_branch_set = #{secondBranchSet,jdbcType=INTEGER},
      third_branch_set = #{thirdBranchSet,jdbcType=INTEGER},
      forth_branch_set = #{forthBranchSet,jdbcType=INTEGER}
    where branch_id = #{branchId,jdbcType=INTEGER}
  </update>
</mapper>