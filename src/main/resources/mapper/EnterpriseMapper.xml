<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.epp.mapper.EnterpriseMapper">
  <resultMap id="BaseResultMap" type="com.epp.pojo.Enterprise">
    <id column="enterprise_id" jdbcType="INTEGER" property="enterpriseId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="tel" jdbcType="INTEGER" property="tel" />
    <result column="account" jdbcType="INTEGER" property="account" />
    <result column="introdution" jdbcType="VARCHAR" property="introdution" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    enterprise_id, name, email, tel, account, introdution
  </sql>
  <select id="selectByExample" parameterType="com.epp.pojo.EnterpriseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from enterprise
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from enterprise
    where enterprise_id = #{enterpriseId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from enterprise
    where enterprise_id = #{enterpriseId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.epp.pojo.EnterpriseExample">
    delete from enterprise
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.epp.pojo.Enterprise">
    <selectKey keyProperty="enterpriseId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into enterprise (name, email, tel, 
      account, introdution)
    values (#{name,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{tel,jdbcType=INTEGER}, 
      #{account,jdbcType=INTEGER}, #{introdution,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.epp.pojo.Enterprise">
    <selectKey keyProperty="enterpriseId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into enterprise
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="introdution != null">
        introdution,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=INTEGER},
      </if>
      <if test="account != null">
        #{account,jdbcType=INTEGER},
      </if>
      <if test="introdution != null">
        #{introdution,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.epp.pojo.EnterpriseExample" resultType="java.lang.Long">
    select count(*) from enterprise
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update enterprise
    <set>
      <if test="record.enterpriseId != null">
        enterprise_id = #{record.enterpriseId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null">
        tel = #{record.tel,jdbcType=INTEGER},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=INTEGER},
      </if>
      <if test="record.introdution != null">
        introdution = #{record.introdution,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update enterprise
    set enterprise_id = #{record.enterpriseId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=INTEGER},
      account = #{record.account,jdbcType=INTEGER},
      introdution = #{record.introdution,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.epp.pojo.Enterprise">
    update enterprise
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=INTEGER},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=INTEGER},
      </if>
      <if test="introdution != null">
        introdution = #{introdution,jdbcType=VARCHAR},
      </if>
    </set>
    where enterprise_id = #{enterpriseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.epp.pojo.Enterprise">
    update enterprise
    set name = #{name,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=INTEGER},
      account = #{account,jdbcType=INTEGER},
      introdution = #{introdution,jdbcType=VARCHAR}
    where enterprise_id = #{enterpriseId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.epp.pojo.Enterprise">
    <id column="enterprise_id" jdbcType="INTEGER" property="enterpriseId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="tel" jdbcType="INTEGER" property="tel" />
    <result column="account" jdbcType="INTEGER" property="account" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    enterprise_id, name, email, tel, account
  </sql>
  <select id="selectByExample" parameterType="com.epp.pojo.EnterpriseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from enterprise
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from enterprise
    where enterprise_id = #{enterpriseId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from enterprise
    where enterprise_id = #{enterpriseId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.epp.pojo.EnterpriseExample">
    delete from enterprise
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.epp.pojo.Enterprise">
    <selectKey keyProperty="enterpriseId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into enterprise (name, email, tel, 
      account)
    values (#{name,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{tel,jdbcType=INTEGER}, 
      #{account,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.epp.pojo.Enterprise">
    <selectKey keyProperty="enterpriseId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into enterprise
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="account != null">
        account,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=INTEGER},
      </if>
      <if test="account != null">
        #{account,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.epp.pojo.EnterpriseExample" resultType="java.lang.Long">
    select count(*) from enterprise
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update enterprise
    <set>
      <if test="record.enterpriseId != null">
        enterprise_id = #{record.enterpriseId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null">
        tel = #{record.tel,jdbcType=INTEGER},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update enterprise
    set enterprise_id = #{record.enterpriseId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=INTEGER},
      account = #{record.account,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.epp.pojo.Enterprise">
    update enterprise
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=INTEGER},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=INTEGER},
      </if>
    </set>
    where enterprise_id = #{enterpriseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.epp.pojo.Enterprise">
    update enterprise
    set name = #{name,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=INTEGER},
      account = #{account,jdbcType=INTEGER}
    where enterprise_id = #{enterpriseId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.epp.pojo.Enterprise">
    <id column="enterprise_id" jdbcType="INTEGER" property="enterpriseId" />
    <result column="enterprise_name" jdbcType="VARCHAR" property="enterpriseName" />
    <result column="enterprise_email" jdbcType="VARCHAR" property="enterpriseEmail" />
    <result column="enterprise_tel" jdbcType="INTEGER" property="enterpriseTel" />
    <result column="enterprise_account" jdbcType="INTEGER" property="enterpriseAccount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    enterprise_id, enterprise_name, enterprise_email, enterprise_tel, enterprise_account
  </sql>
  <select id="selectByExample" parameterType="com.epp.pojo.EnterpriseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from enterprise
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from enterprise
    where enterprise_id = #{enterpriseId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from enterprise
    where enterprise_id = #{enterpriseId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.epp.pojo.EnterpriseExample">
    delete from enterprise
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.epp.pojo.Enterprise">
    <selectKey keyProperty="enterpriseId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into enterprise (enterprise_name, enterprise_email, 
      enterprise_tel, enterprise_account)
    values (#{enterpriseName,jdbcType=VARCHAR}, #{enterpriseEmail,jdbcType=VARCHAR}, 
      #{enterpriseTel,jdbcType=INTEGER}, #{enterpriseAccount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.epp.pojo.Enterprise">
    <selectKey keyProperty="enterpriseId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into enterprise
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="enterpriseName != null">
        enterprise_name,
      </if>
      <if test="enterpriseEmail != null">
        enterprise_email,
      </if>
      <if test="enterpriseTel != null">
        enterprise_tel,
      </if>
      <if test="enterpriseAccount != null">
        enterprise_account,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="enterpriseName != null">
        #{enterpriseName,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseEmail != null">
        #{enterpriseEmail,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseTel != null">
        #{enterpriseTel,jdbcType=INTEGER},
      </if>
      <if test="enterpriseAccount != null">
        #{enterpriseAccount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.epp.pojo.EnterpriseExample" resultType="java.lang.Long">
    select count(*) from enterprise
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update enterprise
    <set>
      <if test="record.enterpriseId != null">
        enterprise_id = #{record.enterpriseId,jdbcType=INTEGER},
      </if>
      <if test="record.enterpriseName != null">
        enterprise_name = #{record.enterpriseName,jdbcType=VARCHAR},
      </if>
      <if test="record.enterpriseEmail != null">
        enterprise_email = #{record.enterpriseEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.enterpriseTel != null">
        enterprise_tel = #{record.enterpriseTel,jdbcType=INTEGER},
      </if>
      <if test="record.enterpriseAccount != null">
        enterprise_account = #{record.enterpriseAccount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update enterprise
    set enterprise_id = #{record.enterpriseId,jdbcType=INTEGER},
      enterprise_name = #{record.enterpriseName,jdbcType=VARCHAR},
      enterprise_email = #{record.enterpriseEmail,jdbcType=VARCHAR},
      enterprise_tel = #{record.enterpriseTel,jdbcType=INTEGER},
      enterprise_account = #{record.enterpriseAccount,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.epp.pojo.Enterprise">
    update enterprise
    <set>
      <if test="enterpriseName != null">
        enterprise_name = #{enterpriseName,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseEmail != null">
        enterprise_email = #{enterpriseEmail,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseTel != null">
        enterprise_tel = #{enterpriseTel,jdbcType=INTEGER},
      </if>
      <if test="enterpriseAccount != null">
        enterprise_account = #{enterpriseAccount,jdbcType=INTEGER},
      </if>
    </set>
    where enterprise_id = #{enterpriseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.epp.pojo.Enterprise">
    update enterprise
    set enterprise_name = #{enterpriseName,jdbcType=VARCHAR},
      enterprise_email = #{enterpriseEmail,jdbcType=VARCHAR},
      enterprise_tel = #{enterpriseTel,jdbcType=INTEGER},
      enterprise_account = #{enterpriseAccount,jdbcType=INTEGER}
    where enterprise_id = #{enterpriseId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.epp.pojo.Enterprise">
    <id column="enterprise_id" jdbcType="INTEGER" property="enterpriseId" />
    <result column="enterprise_name" jdbcType="VARCHAR" property="enterpriseName" />
    <result column="enterprise_email" jdbcType="VARCHAR" property="enterpriseEmail" />
    <result column="enterprise_tel" jdbcType="INTEGER" property="enterpriseTel" />
    <result column="enterprise_account" jdbcType="INTEGER" property="enterpriseAccount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    enterprise_id, enterprise_name, enterprise_email, enterprise_tel, enterprise_account
  </sql>
  <select id="selectByExample" parameterType="com.epp.pojo.EnterpriseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from enterprise
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from enterprise
    where enterprise_id = #{enterpriseId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from enterprise
    where enterprise_id = #{enterpriseId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.epp.pojo.EnterpriseExample">
    delete from enterprise
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.epp.pojo.Enterprise">
    <selectKey keyProperty="enterpriseId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into enterprise (enterprise_name, enterprise_email, 
      enterprise_tel, enterprise_account)
    values (#{enterpriseName,jdbcType=VARCHAR}, #{enterpriseEmail,jdbcType=VARCHAR}, 
      #{enterpriseTel,jdbcType=INTEGER}, #{enterpriseAccount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.epp.pojo.Enterprise">
    <selectKey keyProperty="enterpriseId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into enterprise
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="enterpriseName != null">
        enterprise_name,
      </if>
      <if test="enterpriseEmail != null">
        enterprise_email,
      </if>
      <if test="enterpriseTel != null">
        enterprise_tel,
      </if>
      <if test="enterpriseAccount != null">
        enterprise_account,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="enterpriseName != null">
        #{enterpriseName,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseEmail != null">
        #{enterpriseEmail,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseTel != null">
        #{enterpriseTel,jdbcType=INTEGER},
      </if>
      <if test="enterpriseAccount != null">
        #{enterpriseAccount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.epp.pojo.EnterpriseExample" resultType="java.lang.Long">
    select count(*) from enterprise
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update enterprise
    <set>
      <if test="record.enterpriseId != null">
        enterprise_id = #{record.enterpriseId,jdbcType=INTEGER},
      </if>
      <if test="record.enterpriseName != null">
        enterprise_name = #{record.enterpriseName,jdbcType=VARCHAR},
      </if>
      <if test="record.enterpriseEmail != null">
        enterprise_email = #{record.enterpriseEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.enterpriseTel != null">
        enterprise_tel = #{record.enterpriseTel,jdbcType=INTEGER},
      </if>
      <if test="record.enterpriseAccount != null">
        enterprise_account = #{record.enterpriseAccount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update enterprise
    set enterprise_id = #{record.enterpriseId,jdbcType=INTEGER},
      enterprise_name = #{record.enterpriseName,jdbcType=VARCHAR},
      enterprise_email = #{record.enterpriseEmail,jdbcType=VARCHAR},
      enterprise_tel = #{record.enterpriseTel,jdbcType=INTEGER},
      enterprise_account = #{record.enterpriseAccount,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.epp.pojo.Enterprise">
    update enterprise
    <set>
      <if test="enterpriseName != null">
        enterprise_name = #{enterpriseName,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseEmail != null">
        enterprise_email = #{enterpriseEmail,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseTel != null">
        enterprise_tel = #{enterpriseTel,jdbcType=INTEGER},
      </if>
      <if test="enterpriseAccount != null">
        enterprise_account = #{enterpriseAccount,jdbcType=INTEGER},
      </if>
    </set>
    where enterprise_id = #{enterpriseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.epp.pojo.Enterprise">
    update enterprise
    set enterprise_name = #{enterpriseName,jdbcType=VARCHAR},
      enterprise_email = #{enterpriseEmail,jdbcType=VARCHAR},
      enterprise_tel = #{enterpriseTel,jdbcType=INTEGER},
      enterprise_account = #{enterpriseAccount,jdbcType=INTEGER}
    where enterprise_id = #{enterpriseId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.epp.pojo.Enterprise">
    <id column="enterprise_id" jdbcType="INTEGER" property="enterpriseId" />
    <result column="enterprise_name" jdbcType="VARCHAR" property="enterpriseName" />
    <result column="enterprise_email" jdbcType="VARCHAR" property="enterpriseEmail" />
    <result column="enterprise_tel" jdbcType="INTEGER" property="enterpriseTel" />
    <result column="enterprise_account" jdbcType="INTEGER" property="enterpriseAccount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    enterprise_id, enterprise_name, enterprise_email, enterprise_tel, enterprise_account
  </sql>
  <select id="selectByExample" parameterType="com.epp.pojo.EnterpriseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from enterprise
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from enterprise
    where enterprise_id = #{enterpriseId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from enterprise
    where enterprise_id = #{enterpriseId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.epp.pojo.EnterpriseExample">
    delete from enterprise
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.epp.pojo.Enterprise">
    <selectKey keyProperty="enterpriseId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into enterprise (enterprise_name, enterprise_email, 
      enterprise_tel, enterprise_account)
    values (#{enterpriseName,jdbcType=VARCHAR}, #{enterpriseEmail,jdbcType=VARCHAR}, 
      #{enterpriseTel,jdbcType=INTEGER}, #{enterpriseAccount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.epp.pojo.Enterprise">
    <selectKey keyProperty="enterpriseId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into enterprise
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="enterpriseName != null">
        enterprise_name,
      </if>
      <if test="enterpriseEmail != null">
        enterprise_email,
      </if>
      <if test="enterpriseTel != null">
        enterprise_tel,
      </if>
      <if test="enterpriseAccount != null">
        enterprise_account,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="enterpriseName != null">
        #{enterpriseName,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseEmail != null">
        #{enterpriseEmail,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseTel != null">
        #{enterpriseTel,jdbcType=INTEGER},
      </if>
      <if test="enterpriseAccount != null">
        #{enterpriseAccount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.epp.pojo.EnterpriseExample" resultType="java.lang.Long">
    select count(*) from enterprise
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update enterprise
    <set>
      <if test="record.enterpriseId != null">
        enterprise_id = #{record.enterpriseId,jdbcType=INTEGER},
      </if>
      <if test="record.enterpriseName != null">
        enterprise_name = #{record.enterpriseName,jdbcType=VARCHAR},
      </if>
      <if test="record.enterpriseEmail != null">
        enterprise_email = #{record.enterpriseEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.enterpriseTel != null">
        enterprise_tel = #{record.enterpriseTel,jdbcType=INTEGER},
      </if>
      <if test="record.enterpriseAccount != null">
        enterprise_account = #{record.enterpriseAccount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update enterprise
    set enterprise_id = #{record.enterpriseId,jdbcType=INTEGER},
      enterprise_name = #{record.enterpriseName,jdbcType=VARCHAR},
      enterprise_email = #{record.enterpriseEmail,jdbcType=VARCHAR},
      enterprise_tel = #{record.enterpriseTel,jdbcType=INTEGER},
      enterprise_account = #{record.enterpriseAccount,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.epp.pojo.Enterprise">
    update enterprise
    <set>
      <if test="enterpriseName != null">
        enterprise_name = #{enterpriseName,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseEmail != null">
        enterprise_email = #{enterpriseEmail,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseTel != null">
        enterprise_tel = #{enterpriseTel,jdbcType=INTEGER},
      </if>
      <if test="enterpriseAccount != null">
        enterprise_account = #{enterpriseAccount,jdbcType=INTEGER},
      </if>
    </set>
    where enterprise_id = #{enterpriseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.epp.pojo.Enterprise">
    update enterprise
    set enterprise_name = #{enterpriseName,jdbcType=VARCHAR},
      enterprise_email = #{enterpriseEmail,jdbcType=VARCHAR},
      enterprise_tel = #{enterpriseTel,jdbcType=INTEGER},
      enterprise_account = #{enterpriseAccount,jdbcType=INTEGER}
    where enterprise_id = #{enterpriseId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.epp.pojo.Enterprise">
    <id column="enterprise_id" jdbcType="INTEGER" property="enterpriseId" />
    <result column="enterprise_name" jdbcType="VARCHAR" property="enterpriseName" />
    <result column="enterprise_email" jdbcType="VARCHAR" property="enterpriseEmail" />
    <result column="enterprise_tel" jdbcType="INTEGER" property="enterpriseTel" />
    <result column="enterprise_account" jdbcType="INTEGER" property="enterpriseAccount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    enterprise_id, enterprise_name, enterprise_email, enterprise_tel, enterprise_account
  </sql>
  <select id="selectByExample" parameterType="com.epp.pojo.EnterpriseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from enterprise
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from enterprise
    where enterprise_id = #{enterpriseId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from enterprise
    where enterprise_id = #{enterpriseId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.epp.pojo.EnterpriseExample">
    delete from enterprise
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.epp.pojo.Enterprise">
    <selectKey keyProperty="enterpriseId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into enterprise (enterprise_name, enterprise_email, 
      enterprise_tel, enterprise_account)
    values (#{enterpriseName,jdbcType=VARCHAR}, #{enterpriseEmail,jdbcType=VARCHAR}, 
      #{enterpriseTel,jdbcType=INTEGER}, #{enterpriseAccount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.epp.pojo.Enterprise">
    <selectKey keyProperty="enterpriseId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into enterprise
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="enterpriseName != null">
        enterprise_name,
      </if>
      <if test="enterpriseEmail != null">
        enterprise_email,
      </if>
      <if test="enterpriseTel != null">
        enterprise_tel,
      </if>
      <if test="enterpriseAccount != null">
        enterprise_account,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="enterpriseName != null">
        #{enterpriseName,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseEmail != null">
        #{enterpriseEmail,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseTel != null">
        #{enterpriseTel,jdbcType=INTEGER},
      </if>
      <if test="enterpriseAccount != null">
        #{enterpriseAccount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.epp.pojo.EnterpriseExample" resultType="java.lang.Long">
    select count(*) from enterprise
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update enterprise
    <set>
      <if test="record.enterpriseId != null">
        enterprise_id = #{record.enterpriseId,jdbcType=INTEGER},
      </if>
      <if test="record.enterpriseName != null">
        enterprise_name = #{record.enterpriseName,jdbcType=VARCHAR},
      </if>
      <if test="record.enterpriseEmail != null">
        enterprise_email = #{record.enterpriseEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.enterpriseTel != null">
        enterprise_tel = #{record.enterpriseTel,jdbcType=INTEGER},
      </if>
      <if test="record.enterpriseAccount != null">
        enterprise_account = #{record.enterpriseAccount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update enterprise
    set enterprise_id = #{record.enterpriseId,jdbcType=INTEGER},
      enterprise_name = #{record.enterpriseName,jdbcType=VARCHAR},
      enterprise_email = #{record.enterpriseEmail,jdbcType=VARCHAR},
      enterprise_tel = #{record.enterpriseTel,jdbcType=INTEGER},
      enterprise_account = #{record.enterpriseAccount,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.epp.pojo.Enterprise">
    update enterprise
    <set>
      <if test="enterpriseName != null">
        enterprise_name = #{enterpriseName,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseEmail != null">
        enterprise_email = #{enterpriseEmail,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseTel != null">
        enterprise_tel = #{enterpriseTel,jdbcType=INTEGER},
      </if>
      <if test="enterpriseAccount != null">
        enterprise_account = #{enterpriseAccount,jdbcType=INTEGER},
      </if>
    </set>
    where enterprise_id = #{enterpriseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.epp.pojo.Enterprise">
    update enterprise
    set enterprise_name = #{enterpriseName,jdbcType=VARCHAR},
      enterprise_email = #{enterpriseEmail,jdbcType=VARCHAR},
      enterprise_tel = #{enterpriseTel,jdbcType=INTEGER},
      enterprise_account = #{enterpriseAccount,jdbcType=INTEGER}
    where enterprise_id = #{enterpriseId,jdbcType=INTEGER}
  </update>
</mapper>